type: "MARKDOWN_NOTE"
content: '''
  ## Workflow
  
  - Programs
    - Microsoft Office (outlook, calendar)
    - Slack (instant messaging)
    - Tettra (intra-document sharing)
    - SnagIt (take window snapshots, make annotations)
    - Dropbox (specs and documentation readings)
    - Jump Desktop (connect
    - Microsoft remote desktop (connect to demo app and debug)
    - Jamf (install programs)
    - Airtame (screen share with tv)
    - Kayako (customer service cases)
    - Keeper (security login information)
  
  - Backend Workflow
    - Database language is MySQL
    - Code base is worked on Visual Studio
  
  - WeEstimate Settings
    - Basic settings to where things import, export and related document paths
    - If user has some access denied error, it's likely that they don't have user rights. Enable this in the appropriate for user(s) being affected (go into file explorer properties)
  
  - Getting into crystal reports
    - Go to Jump and connect to dev server 01 (JP)
    - Open up visual studio
    - Click on default collection
      - Select folder 'Select'
      - Select folder ' Reports'
      - Select any file with extension rpt
  
  - Testing a recent push on master
    - **WeEstimate**
      - Go to WeSuite Client (Demo Live Test) JP
      - Click on Master application
      - Use joem credentials
    - **WeOpportunity**
      - Search Windows for IIS (internet information services) 
      - Click on Wesuite (weremote\\jason.perez) dropdown, another example: SON-WESUITE (SONTITROL\\wesuite)
      - Click on Sites dropdown
      - Click on Master WeOpportunity
        - On right toolbar, click on the browse website option
        - Test as needed
      - Another option would be to test weopp demo, click on WeOpportunity_Sandbox and select Browse Website option on righthand actions bar
  
  - Sonitrol connection and client server set up
    - Go to jump
    - Look up Sonitrol
    - Credentials already duplicated and edited, proceed
    - Once inside, go to Remote Desktop Connection (not sure what credentials to use, look at Keeper?)
    - Another server window will pop up
      - Slightly confusing, think server within a server
      - Their server is relayed back to our server using remote desktop connections
      - This way, we simulate user scenario where they connect to our system
    - To debug, start by opening up SQL server management
    - If doing job related to contracts, connect to Contracts
    - Set up a new query
    - Copy paste an updated query
    - Or set up sql trace profiler to track where the error is coming from
  
  Stored procedure error debugging
    - With sql trace profiler set up from client's server (look up client server set up)
    - Make sure system is connected to Contracts
    - Simulate client issue
    - Filter out results pertaining to user and issue (can do presets and then search)
    - Once problem query is found, find root file/command line issue
    - If it’s a script file, look at the parameters it takes
      - Start a new query and fill in the necessary parameters to get the returning red error message
      - Report back results and find solution with dev team
  
  Stored procedures
    - To find stored procedures, go to WeSuiteDemo(verify?) > Programmability > Stored Procedures
    - If replacing a stored procedure, make sure to make a backup using save as
      - Write the term "original" to verify the file
  
  Eoriginal Documents
  - Go to previewondemand.eoriginal.com
  - Log in (should be presaved)
  
  Data dump basics
      - Download excel sheet with different dp (datapoints)
      - From there, connect to Jump Desktop
  * Search for company name (Mutual)
  * Use credentials using weremote (from keeper)
      * If one is not made, then duplicate from already existing user (right click -> duplicate)
      * Type in credentials (weremote) and change user label name
  * Once logged in, go open application in directory: C:\\WeSuite\\Client_Sandbox\\wesuite.exe
      * The application opened should be called WeEstimate V… Live
  * Click on Tools - Part Import - New (on the left) - Select xls file
  * On toolbar above excel sheet, click dropdown to select the required labels
      * mfgr (manufacturing company or in some cases, the client company itself)
      * desc (description)
      * unitcost (unit cost)
      * model (model number)
  - Go to preferences
  - Go to Signature Templates
  - Upload document (pdf)
  - Add in required, non-required boxes
  - Once finished, double check the hierarchy of items
  
  Constructing a TFS
  - Go to visual studio
  - Look up an earlier ticket
  - Example header: [WeEstimate] Name of Error [Kayako Number]
  - Bug work item will contain steps to reproduce the bug
  - Bug will be assigned to Support asignee
  - If the bug is urgent/critical/etc, the bug is added to the Urgent lane (if possible) and given the "critical" tag.
    - Two child works
      - Anstasiya will take care of storyboarding the tasks
      - Stephen will take care of creating the tasks
  - Support or QA creates a task for the developer (to fix the bug) and a task for the tester (to check the bug has been resolved and create a UI to ensure it doesn't show up again). Both of these tasks are assigned immediately.
  - The developer and tester add tasks to fix the bug and to test the fix (including UI tests).
  - The developer recruits the tester when they begin working on the bug to brainstorm. The tester gives insight into how to test this and the developer provides the tester with information about how this functionality works. The tester will record the information gained in this session in a task or test to create the test case(s) for the bug at a later time.
  - The developer fixes the bug and informs the tester that the fix is ready for testing during sprint planning.
  - During planning, the tester assigns the tasks for verifying the fix is working, creating the test case(s), and recording/cleaning/pushing UI tests.
  - The tester coordinates with people who know the functionality to write test cases and understand how the functionality works.
  - The tester records UI tests based on the test cases and uses test cases to check if applied fix works.
  
  Script to execute when dealing with "Cannot insert duplicate key row in object dbo.labordata":
  ```sql
  update tmpfolders
  set prt =  b.pos from tmpfolders
  inner join
  (select pos,idnum from tmpfolders where lvl1prt=0 and lvl2prt=0 ) b
  on b.idnum=tmpfolders.lvl1prt or b.idnum=tmpfolders.lvl2prt
  
  update tmpfolders
  set prt=pos
  where lvl1prt=0 and lvl2prt=0 
  
  select prt,pos, * from tmpfolders where lvl1prt=0 and lvl2prt=0 and priceinfoID=33600 order by tmpfolders.pos
  set prt=pos where priceinfoid matches and
  
  Ws2018!!
  ```
  
  Loading XML Files (from eOriginal)
  - Once finished with document signature templates on eoriginal, connect to client server
  - There might be two different connections for production/demo and sql server
  - Go to wetransfer.com and upload documents
  - Download documents individually
    - This is done on their server by using the link to download the xml docs
  - Go to E:\\WeSuiteShare\\Content\\eOriginal and paste the downloaded xml files there (remember the naming format: FormFields_CompanyNameofDoc.xml)
  - To double check the correct files are loaded, go into sql server management and execute: select * from doctemplates in their Contracts_Test database
  - Verify that the corresponding documents match with correctly named xml documents
    - If not, update the specific doctemplate with the correct doc filename, use simple query:
  ```sql
  update doctemplates
  set eoFormFieldsXmlFile = "zzz.xml"
  where doctemplateID=01
  ```
  - To check that everything has been loaded correctly, go into their demo sandbox and make a test project>Document>Add Quote Package>Contracts>Select Contract(s) that you want to verify>Check off>Send for Electronic Signature>Check off, Select Customer Role>Send Invite
  - If your email is not set as the invitee, go into Contact Information and edit the Main Contact email info to yours
  - Check email
  - Debugging steps:
    - If document does not load correctly when opening from WeSuite or email link then
    - Check the eOriginal folder on the server and look at the recently generated XML files
    - These XML files contain the transactionSid which will help with debugging
  - Checking contracts db
  ```sql
  -- for checking paths and urls
  select * from programOption where description like '%eorig%'
  ```
  - To edit XML files for final editing
    - Simply copy and paste back and forth from Atom and client server (open up a Wordpad sheet of the XML file) in order to quickly edit
  
  - Creating new RDP credentials (i.e. new WeSuite usernames)
    - Go into WeRemote DC AWS
    - Search and click 'Active Directory Users and Comp'
    - Right click on a user and select copy
    - Enter new credentials, save the information and send to client
  
  - Logging into lic.wesuite.com
    - Use mari's login: mariuxi.tapia@wesuite.com pass: Shep@rd815
    - [link to lic](https://lic.wesuite.com/Account/Login?ReturnUrl=%2fHome%2fIndex)
    - WeSuite demo: email: wegodemo@wesuite.com
  
  - WDC For Normal Cover Letter, Summary, etc. document editor
    - Go into Demo server and click on WSDocument application
    - In order to save changes
    - Click save and use latest release
    - To commit changes, click Save As, write a note, and then check off the box in the left bottom corner
    - To save changes on their server, go into their Program Options, Click Document Setup, Proposal Setup and then select which iteration you saved (ex:  version #24)
    - For some reason, when I did it, the changes were not saved correctly
  
  
  
  
  
'''
title: "Workflow"
folder: "0295d9293f4867e4a88c"
createdAt: "2018-08-27T20:30:50.391Z"
updatedAt: "2018-10-04T14:55:07.189Z"
isStarred: false
isTrashed: false
tags: []
isPinned: false
